name: matrix
on:
  schedule: [ cron: '0 5 * * *' ] # every day at 5am UTC
  workflow_dispatch:

jobs:
  build:
    env:
      BASE_OCI_REF: "ghcr.io/${{ github.repository_owner }}/"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      KERNEL_RPM_VERSION: "1020" # Bump this to rebuild everything
    permissions:
      packages: write # to write to ghcr.io
      contents: write # to commit to the repo
    runs-on: "${{ matrix.runner }}"
    strategy:
      fail-fast: false # let other jobs try to complete if one fails
      matrix:
        include:
          # To also push a builder image, set PUSH_BUILDER_IMAGE to "yes"

          # x86
          - { id: "x86_64-6.1.y-kvm", env: { EL_MAJOR_VERSION: "9", KERNEL_MAJOR: "6", KERNEL_MINOR: "1", FLAVOR: "kvm" }, runner: "ubuntu-latest" }
          - { id: "x86_64-6.12.y-kvm", env: { EL_MAJOR_VERSION: "9", KERNEL_MAJOR: "6", KERNEL_MINOR: "12", FLAVOR: "kvm" }, runner: "ubuntu-latest" }
          - { id: "x86_64-6.1.y-generic", env: { EL_MAJOR_VERSION: "9", KERNEL_MAJOR: "6", KERNEL_MINOR: "1", FLAVOR: "generic" }, runner: "ubuntu-latest" }
          - { id: "x86_64-6.12.y-generic", env: { EL_MAJOR_VERSION: "9", KERNEL_MAJOR: "6", KERNEL_MINOR: "12", FLAVOR: "generic" }, runner: "ubuntu-latest" }

          # arm64
          - { id: "aarch64-6.12.y-kvm", env: { EL_MAJOR_VERSION: "9", KERNEL_MAJOR: "6", KERNEL_MINOR: "12", FLAVOR: "kvm" }, runner: "ubuntu-24.04-arm" }
          - { id: "aarch64-6.12.y-generic", env: { EL_MAJOR_VERSION: "9", KERNEL_MAJOR: "6", KERNEL_MINOR: "12", FLAVOR: "generic" }, runner: "ubuntu-24.04-arm" }

    name: "${{ matrix.id }}"
    steps:
      - name: cleanup GHA hosted runner
        run: |
          # Workaround to provide additional free space for building.
          #   https://github.com/actions/virtual-environments/issues/2840
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Checkout build repo
        uses: actions/checkout@v4

      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # GitHub username or org
          password: ${{ secrets.GITHUB_TOKEN }}    # GitHub actions builtin token. repo has to have pkg access.

      - name: Actually process ${{matrix.id}}
        id: buildkernel
        env: ${{ matrix.env }} # this gets combined with the job-wide env's like BASE_OCI_REF
        run: |
          MATRIX_ID="${{ matrix.id }}" bash kernel.sh checkbuildandpush

      ## Release the artifacts into GitHub Releases for easy downloading ("specific version")
      #- name: "GH version-specific Release ${{steps.buildkernel.outputs.MATRIX_ID_POINT_RELEASE}} for version ${{ steps.buildkernel.outputs.FULL_VERSION }}"
      #  if: "${{ steps.buildkernel.outputs.ALREADY_BUILT == 'no' }}" # Only if not already done
      #  uses: "marvinpinto/action-automatic-releases@latest"
      #  with:
      #    repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #    automatic_release_tag: "${{steps.buildkernel.outputs.MATRIX_ID_POINT_RELEASE}}"
      #    prerelease: false
      #    title: "${{ steps.buildkernel.outputs.FULL_VERSION }} for ${{steps.buildkernel.outputs.MATRIX_ID_POINT_RELEASE}}"
      #    files: |
      #      dist/*.rpm

      # Release the artifacts into GitHub Releases for easy downloading ("latest")
      - name: "GH latest Release ${{matrix.id}} for version ${{ steps.buildkernel.outputs.FULL_VERSION }}"
        if: "${{ steps.buildkernel.outputs.ALREADY_BUILT == 'no' }}" # Only if not already done
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{matrix.id}}"
          prerelease: false
          title: "${{ steps.buildkernel.outputs.FULL_VERSION }} for ${{matrix.id}}"
          files: |
            dist/*.rpm
